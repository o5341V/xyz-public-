// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© Uni_ve12se
//@version=5
indicator('Book', overlay=true, scale=scale.none)

normalize(_src, _min, _max) =>
// Normalizes series with unknown min/max using historical min/max.
// _src      : series to rescale.
// _min, _min: min/max values of rescaled series.
    var _historicMin = +10e10
    var _historicMax = -10e10
    _historicMin := math.min(nz(_src, _historicMin), _historicMin)
    _historicMax := math.max(nz(_src, _historicMax), _historicMax)
    _min + (_max - _min) * (_src - _historicMin) / math.max(_historicMax - _historicMin, 10e-10)


ibm_15 = request.security('BLKVOL.US', 'D', close)
length1 = input.int(20, 'Fast SMA Length', minval=1)
length2 = input.int(52, 'Slow SMA Length', minval=1)

ibm_16 = request.security('USI:BLKVAL.UPTK.US-USI:BLKVAL.DNTK.US', 'D', close)
ibm_17 = request.security('USI:BLKVAL.UPTK.US', 'D', close)
ibm_18 = request.security('USI:BLKVAL.DNTK.US', 'D', close)

//ibm_x = security("(USI:BLKVAL.UPTK.AM+USI:BLKVAL.UPTK.AX+USI:BLKVAL.UPTK.DJ+USI:BLKVAL.UPTK.NQ+USI:BLKVAL.UPTK.NY+USI:BLKVAL.UPTK.US)/6", "D", close)
//ibm_z = security("(USI:BLKVAL.DNTK.AM+BLKVAL.DNTK.AX+BLKVAL.DNTK.DJ+BLKVAL.DNTK.NQ+BLKVAL.DNTK.NY+BLKVAL.DNTK.US)/6", "D", close)

//plot(ibm_15, title="Histogram", style=plot.style_histogram, color=(ibm_15>=0 ? (ibm_15[1] < ibm_15 ? #00fe7d : #00fe7d) : (ibm_15[1] < ibm_15 ? #ff0000 : #ff0000) ), transp=0)
//plot(sma(ibm_17-ibm_18,length1), title="BTO Fast", style=plot.style_line, color=color.white)
x = ta.sma(ibm_17 - ibm_18, length1)

[bbMiddle, bbUpper, bbLower] = ta.bb(normalize(x, 0, 100), input(252), 2)

plot(bbUpper, color=color.new(color.gray, 0))
plot(bbLower, color=color.new(color.gray, 0))
plot(bbMiddle, color=color.new(color.gray, 0))
plot(normalize(x, 0, 100), 'Normalized', color.new(color.red, 0))

barcolor(normalize(x, 0, 100) < bbLower ? color.green : normalize(x, 0, 100) > bbUpper ? color.red : na)


//////// x
displayx = input(title='Display Book?', defval=true)
displaySPX = input(title='Display SPX?', defval=true)

bookangle = (normalize(x, 0, 100))

currentx = bookangle
previousx = bookangle[1]

Lookbackx = input(9)

countx   = 0

for i = 0 to Lookbackx
    if (currentx[i] > previousx[i])
        countx := countx + 1

positivexpercent = displayx ? (countx / Lookbackx) * 100 : na
//plot(positivexpercent, title="Book", style=plot.style_line, color=color.red)

//////// SPX

cSPX = request.security("AMEX:SPY", timeframe.period, close, barmerge.gaps_on, barmerge.lookahead_on)
oSPX = request.security("AMEX:SPY", timeframe.period, open, barmerge.gaps_on, barmerge.lookahead_on)

currentSPX = cSPX
previousSPX = cSPX[1]

LookbackSPX = input(9)

countSPX   = 0

for i = 0 to LookbackSPX
    if (currentSPX[i] > previousSPX[i])
        countSPX := countSPX + 1

positiveSPXpercent = displaySPX ? (countSPX / LookbackSPX) * 100 : na
//plot(positiveSPXpercent, title="S %", style=plot.style_line, color=color.blue)

//

displayDifference1 = input(title='Display Difference1?', defval=false)

Difference1 = displayDifference1 ? (  bookangle / positiveSPXpercent ) * 100 : na

plot(Difference1, title="Difference1 %", style=plot.style_line, color=color.rgb(0, 0, 0))