// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
//@version=4
study(title="Ralph Haller Bands Oscillator", shorttitle="RHBO", overlay=false)
sample = input(50, title="Sample")
src = input(close, title="Source")
factor = input(1.5, "Factor")
n = input(2.5, "N Value")

stDev(src, sample)=>
    a = sma(pow(src, 2), sample)
    b = pow(sum(src, sample), 2) / pow(sample, 2)
    std = sqrt(a - b)

//sd = stDev(src, sample)
mn = sma(src, sample)
sd = sum(abs(src - mn), sample) / sample

stdev05_up = src + (0.5 * sd)
stdev1_up = src + (1 * sd)
stdev15_up = src + (1.5 * sd)
stdev2_up = src + (2 * sd)
stdev3_up = src + (3 * sd)
stdev4_up = src + (4 * sd)

stdev05_down = src - (0.5 * sd)
stdev1_down = src - (1 * sd)
stdev15_down = src - (1.5 * sd)
stdev2_down = src - (2 * sd)
stdev3_down = src - (3 * sd)
stdev4_down = src - (4 * sd)

length = input(15, "Length")
length2 = round(length*factor)
length3 = round(length2*factor)
length4 = round(length3*factor)
length5 = round(length4*factor)

// NLMA Open
nlma(source, length)=>
    lag = (length - 1) / n
    data = source + (source - source[lag])
    wnlma = wma(wma(data, length), length/2)
// NLMA Close

stdevMA(source)=>
    stdevMA1 = sma(source, length)
    stdevMA2 = sma(source, length2)
    stdevMA3 = sma(source, length3)
    stdevMA4 = sma(source, length4)
    stdevMA5 = sma(source, length5)
    maOut = (stdevMA1+stdevMA2+stdevMA3+stdevMA4+stdevMA5)/5

maOut05A = stdevMA(stdev05_up)
maOut05B = stdevMA(stdev05_down)

osc = src/((maOut05A+maOut05B)/2)-1

// Fisher
len = input(6, minval=1, title="Fisher Sample")
high_ = highest(osc, len)
low_ = lowest(osc, len)
value = 0.0
value := .66 * ((osc - low_) / (high_ - low_) - .5) + .67 * nz(value[1])
fisher = .5 * log((1 + value) / (1 - value))
// Fisher

plot(osc, color=#dddddd, title="Oscillator", display=display.none)
plot(fisher, color=color.lime, title="Fisher")