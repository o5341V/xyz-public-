// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© Uni_ve12se

//@version=5
indicator("Stacking Alpha",shorttitle="1Uni_veRse", timeframe='', overlay=false)

// Getting inputs
//ADXfilter = input(50, title="Defval45, Increase for Higher ADX to filter on lower frames")
//Sentimentfilter = input(45, title="Defval30, Decrease for Lower MarketSentiment to filter on lower frames")

wthreshold = input(35, title="Weak Threshold")
sthreshold = input(40, title="Strong Threshold")

// adx inputs
adxlen = input(10, title="ADX Smoothing")
dilen = input(10, title="DI Length")
dirmov(len) =>
	up = ta.change(high)
	down = -ta.change(low)
	plusDM = na(up) ? na : (up > down and up > 0 ? up : 0)
	minusDM = na(down) ? na : (down > up and down > 0 ? down : 0)
	truerange = ta.rma(ta.tr, len)
	plus = fixnan(100 * ta.rma(plusDM, len) / truerange)
	minus = fixnan(100 * ta.rma(minusDM, len) / truerange)
	[plus, minus]
adx(dilen, adxlen) =>
	[plus, minus] = dirmov(dilen)
	sum = plus + minus
	adx = 100 * ta.rma(math.abs(plus - minus) / (sum == 0 ? 1 : sum), 1)
sig = adx(dilen, adxlen)

//Sentiment
perioda = 51, periodb= 47, roundingvalue = 4

llow = ta.lowest(low, perioda)

hhigh = ta.highest(high, perioda)

c_ln = close - llow

hn_ln = hhigh - llow

denominator = math.sum(hn_ln, perioda)

numerator = math.sum(c_ln, periodb)

marketsentiment = 100*(numerator/denominator)

up = ta.change(high)
down = -ta.change(low)
trur = ta.rma(ta.tr, adxlen)
plus = fixnan(100 * ta.rma(up > down and up > 0 ? up : 0, dilen) / trur)
minus = fixnan(100 * ta.rma(down > up and down > 0 ? down : 0, dilen) / trur)
sum = plus + minus
adx = 100 * ta.rma(math.abs(plus - minus) / (sum == 0 ? 1 : sum), 1)

//

Bottom1= sig > 70 and sig > sthreshold and plus < minus
Bottom1x = sig > marketsentiment and marketsentiment < 10

Signal1 = Bottom1 and Bottom1x ? 1 : 0
Signal1x = Signal1 < Signal1[1] ? 1 : 0

//

Bottom2= sig > 65 and sig > sthreshold and plus < minus
Bottom2x = sig > marketsentiment and marketsentiment < 15

Signal2 = Bottom2 and Bottom2x ? 1 : 0
Signal2x = Signal2 < Signal2[1] ? 1 : 0

//

Bottom3= sig > 60 and sig > sthreshold and plus < minus
Bottom3x = sig > marketsentiment and marketsentiment < 20

Signal3 = Bottom3 and Bottom3x ? 1 : 0
Signal3x = Signal3 < Signal3[1] ? 1 : 0

//

Bottom4= sig > 55 and sig > sthreshold and plus < minus
Bottom4x = sig > marketsentiment and marketsentiment < 25

Signal4 = Bottom4 and Bottom4x ? 1 : 0
Signal4x = Signal3 < Signal4[1] ? 1 : 0

//

Bottom5= sig > 55 and sig > sthreshold and plus < minus
Bottom5x = sig > marketsentiment and marketsentiment < 30

Signal5 = Bottom5 and Bottom5x ? 1 : 0
Signal5x = Signal5 < Signal5[1] ? 1 : 0

//

Bottom6= sig > 50 and sig > sthreshold and plus < minus
Bottom6x = sig > marketsentiment and marketsentiment < 35

Signal6 = Bottom6 and Bottom6x ? 1 : 0
Signal6x = Signal6 < Signal6[1] ? 1 : 0

//

Bottom7= sig > 45 and sig > sthreshold and plus < minus
Bottom7x = sig > marketsentiment and marketsentiment < 40

Signal7 = Bottom7 and Bottom7x ? 1 : 0
Signal7x = Signal7 < Signal7[1] ? 1 : 0

//

Bottom8= sig > 40 and sig > sthreshold and plus < minus
Bottom8x = sig > marketsentiment and marketsentiment < 45

Signal8 = Bottom8 and Bottom8x ? 1 : 0
Signal8x = Signal8 < Signal8[1] ? 1 : 0

//


Signal_Cum = ( Signal1x + Signal2x + Signal3x + Signal4x + Signal5x + Signal6x + Signal7x  + Signal8x ) / 8

Signal_Cum_cum = ta.cum(Signal1x + Signal2x + Signal3x + Signal4x + Signal5x + Signal6x + Signal7x  + Signal8x)
Signal_Cum_var = ta.variance(ta.cum(Signal1x + Signal2x + Signal3x + Signal4x + Signal5x + Signal6x + Signal7x  + Signal8x), input(10, title = 'variance'))

plot(series=Signal_Cum, title='Plot', style=plot.style_line, color=color.new(#88ffd8, transp=0), linewidth=1)
plot(series=Signal_Cum_cum, title='cum', style=plot.style_line, color=color.new(#88ffd8, transp=0), linewidth=1)
plot(series=Signal_Cum_var, title='var', style=plot.style_line, color=color.new(#88ffd8, transp=0), linewidth=1)

scLen = input(.3)

plot(series=Signal_Cum, title='Plot', style=plot.style_cross, color=(Signal_Cum >= scLen ? color.white : na), linewidth=1)
