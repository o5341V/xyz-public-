// Â© FriendOfTheTrend

//@version=5



indicator("RVGI Convergence table", shorttitle="", overlay=false)





//Stochastic RSI

relVigor(len) =>

    x = (close - open + 2 * (close[1] - open[1]) + 2 * (close[2] - open[2]) + close[3] - open[3]) / 6

    y = (high - low + 2 * (high[1] - low[1]) + 2 * (high[2] - low[2]) + high[3] - low[3]) / 6

    r = ta.sma(x, len) / ta.sma(y, len)

    sig = (r + 2 * r[1] + 2 * r[2] + r[3]) / 6

    [r, sig]



out(sigMode, rVal, sVal) =>

    var color outColor = na

    var float outVal = na

    if sigMode == 'Zero-Cross'

        outVal := rVal

        outColor := rVal >= 0 ? color.green : color.red

        outColor

    else

        if sigMode == 'Increasing/Decreasing'

            outVal := rVal

            outColor := rVal >= rVal[1] ? color.green : color.red

            outColor

        else

            outVal := rVal - sVal

            outColor := rVal - sVal >= rVal[1] - sVal[1] ? color.green : color.red

            outColor

    [outVal, outColor]









lenR = input.int(14, title='Length of Relative Vigor', minval=1)

mode = input.string(title='Mode', options=['Zero-Cross', 'Increasing/Decreasing', 'Signal Comparison'], defval='Increasing/Decreasing')







[rv, signal] = relVigor(lenR)

[plt, col] = out(mode, rv, signal)



p0 = plot(plt, title='RVI', style=plot.style_histogram, color=col, linewidth=3, transp=0)



//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



//Table On/Off

infoDataTableOn = input.bool(true, title="Indicator Directions Table On/Off", group="Info Tables")



//Table Positions

bright = position.bottom_right

bleft = position.bottom_left

bcenter = position.bottom_center

tright = position.top_right

tleft = position.top_left

tcenter = position.top_center

mright = position.middle_right

mleft = position.middle_left

mcenter = position.middle_center

itablePosition = input.string(tright, title="Indicator Table Position", options=[bright, bleft, bcenter, tright, tleft, tcenter, mright, mleft, mcenter], group="Info Tables")



//Lengths



stochasticOn = input.bool(true, title="Turn Stochstic RSI Label On/Off", group="Stochastic RSI Settings")

stochasticOrder = input.int(1, title="Place On The List", minval=1, maxval=2, group="Stochastic RSI Settings")


//Create Stochastic RSI indicator label table data

stochLabel = color.new(#000000, 0)
stochIndicatorLabel = ""

tarising = plt > plt[1]

tafalling = plt < plt[1]

if tarising
    stochLabel := color.lime
    stochIndicatorLabel := string("Positive +")
else if tafalling
    stochLabel := color.red
    stochIndicatorLabel := string("Negative -")
else if na
    stochLabel := color.blue
    stochIndicatorLabel := string("Neutral")

//Plot Price Difference Table

infoDataTable = table.new(itablePosition, columns=1, rows=10)

//if infoDataTableOn and barstate.islast

table.cell(table_id=infoDataTable, column=0, row=stochasticOrder, text = stochIndicatorLabel , height=15, text_color=color.white, text_halign=text.align_left, text_valign=text.align_top, bgcolor=stochLabel)
    