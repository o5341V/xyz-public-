//@version=5
indicator("Murrey Math Shit", timeframe="",overlay=false)

[realOpen, realHigh, realLow, realClose] = request.security(ticker.new(syminfo.prefix, syminfo.ticker), timeframe.period, [open, high, low, close])
 
//EMA
len = input(5, title="Length")
src = input(hl2, title="Source")
 
out = ta.ema(src, len)
 
// Inputs
length = input(64, title = "Look back Length")
mult = input(0.125, title = "Mutiplier; Only Supports 0.125 = 1/8")
 
// Donchanin Channel
hi = ta.highest(high, length)
lo = ta.lowest(low, length)
rangedc = hi - lo
multiplier = (rangedc) * mult
midline = lo + multiplier * 4
 
oscillator = (close - midline)/(rangedc/2)
 
a = oscillator > 0 and oscillator < mult*2
b = oscillator > 0 and oscillator < mult*4
c = oscillator > 0 and oscillator < mult*6
d = oscillator > 0 and oscillator < mult*8
 
z = oscillator < 0 and oscillator > -mult*2
y = oscillator < 0 and oscillator > -mult*4
x = oscillator < 0 and oscillator > -mult*6
w = oscillator < 0 and oscillator > -mult*8
 
//Bottoms 
 
xyz_ = oscillator <= -mult*7
abc_ = oscillator >= -mult*6
 
Bottom1 = xyz_[1] and abc_ == true
 
Bottom2 =  close > out
 
Bottom3 = (Bottom1 and Bottom2) == true
 
Barcolor = oscillator <= -mult*5 and (close < out) == true ? color.new(#9598a1, 0) : (xyz_[1] and abc_) and (close > out) == true  ? color.new(#ff0000, 0) : na
 
//Barcolor = oscillator < -mult*5 == true ? color(#fbe200, 0) : Bottom3 == true  ? color(#ff0000, 0) : na
 
barcolor(Barcolor)

xyz_2 = oscillator <= -mult*6
abc_2 = oscillator > -mult*5
 
Bottom_2 = xyz_2[1] and abc_2 == true ? color.green : na

barcolor(Bottom_2)
 
//plotchar(Bottom_2, title="shapes",char="x", location=location.bottom, size=size.tiny, color=color.white, transp=10)

//plotchar(Bottom3, title="shapes", char = "â–²", location=location.bottom, size=size.tiny,textcolor=color.white, transp=10)
 
 
// plotshape(Top, color=red, style=shape.xcross, location=location.abovebar, size=size.tiny, textcolor=red, transp=10)
//plot(oscillator)
 
//plotshape(CrossingEMAs, color=color.red, style=shape.triangleup, location=location.belowbar, size=size.tiny, textcolor=color.red, transp=10)
 
//Strategy
 
//if Bottom == true
//    strategy.order("+", strategy.long)
//if Top == true
//    strategy.close_all()