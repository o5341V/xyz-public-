// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
//@version=4
study("Ralph Haller Volatility Trend Oscillator")

switcher = input(title="Plot Type", options=["Cumulative", "Periodic"], defval="Cumulative")

lookback = input(30, "Lookback")

// Transformation Functions
logTransform = input(false, title="Log Transform")
percentageScale = true
percentageTransform = percentageScale==true ? 100 : -1
base = input(1.618033, "Log Base")
lq(variable) => variable < 0 ? -(log10(-variable) / log10(base)) : (log10(variable) / log10(base))
transform(variable)=> logTransform==true ? lq(variable*percentageTransform) : variable*percentageTransform

// Volatility Types
volatilityTotal = transform(high/low-1)
volatilityTotal_Directional = close > open ? transform(high/low-1) : transform(1-high/low)
volatilityPositive = transform(1-open/high)
volatilityNegative = transform(1-open/low)
volatilitySignal = transform(1-open/close)
volatilityDelta = transform(volatilityPositive-volatilityNegative)

volatilityTotal_CrossBar = transform(high[0]/low[1]-1)
volatilityPositive_CrossBar = transform(1-high[1]/high[0])
volatilityNegative_CrossBar = transform(low[1]/low[0]-1)
volatilityArtifact_CrossBar = transform(close[1]/open[0]-1)

volatilityTotal_Comparative = transform(volatilityTotal[1]-volatilityTotal[0])
volatilityPositive_Comparative = transform(volatilityPositive[1]-volatilityPositive[0])
volatilityNegative_Comparative = transform(volatilityNegative[1]-volatilityNegative[0])
volatilitySignal_Comparative = transform(volatilitySignal[1]-volatilitySignal[0])
volatilityDelta_Comparative = transform(volatilityDelta[1]-volatilityDelta[0])

//
select_VolatilityType1 = input(title="Volatility Type I", options = ["Total", "Total Directional", "Positive", "Negative", "Signal", "Delta", "Cross-Bar Total", "Cross-Bar Positive", "Cross-Bar Negative", "Cross-Bar Artifact", "Comparative Total", "Comparative Positive", "Comparative Negative", "Comparative Signal", "Comparative Delta"], defval="Total", group="Volatility Types")
select_VolatilityType2 = input(title="Volatility Type II", options = ["Total", "Total Directional", "Positive", "Negative", "Signal", "Delta", "Cross-Bar Total", "Cross-Bar Positive", "Cross-Bar Negative", "Cross-Bar Artifact", "Comparative Total", "Comparative Positive", "Comparative Negative", "Comparative Signal", "Comparative Delta"], defval="Total", group="Volatility Types")

volatilityType1 = select_VolatilityType1=="Total" ? volatilityTotal : select_VolatilityType1=="Total Directional" ? volatilityTotal_Directional : select_VolatilityType1=="Positive" ? volatilityPositive : select_VolatilityType1=="Negative" ? volatilityNegative : select_VolatilityType1=="Signal" ? volatilitySignal : select_VolatilityType1=="Delta" ? volatilityDelta : select_VolatilityType1=="Cross-Bar Positive" ? volatilityPositive_CrossBar : select_VolatilityType1=="Cross-Bar Negative" ? volatilityNegative_CrossBar : select_VolatilityType1=="Cross-Bar Artifact" ? volatilityArtifact_CrossBar : select_VolatilityType1=="Comparative Total" ? volatilityTotal_Comparative : select_VolatilityType1=="Comparative Positive" ? volatilityPositive_Comparative : select_VolatilityType1=="Comparative Negative" ? volatilityNegative_Comparative : select_VolatilityType1=="Comparative Signal" ? volatilitySignal_Comparative : select_VolatilityType1=="Comparative Delta" ? volatilityDelta_Comparative : na
volatilityType2 = select_VolatilityType2=="Total" ? volatilityTotal : select_VolatilityType2=="Total Directional" ? volatilityTotal_Directional : select_VolatilityType2=="Positive" ? volatilityPositive : select_VolatilityType2=="Negative" ? volatilityNegative : select_VolatilityType2=="Signal" ? volatilitySignal : select_VolatilityType2=="Delta" ? volatilityDelta : select_VolatilityType2=="Cross-Bar Positive" ? volatilityPositive_CrossBar : select_VolatilityType2=="Cross-Bar Negative" ? volatilityNegative_CrossBar : select_VolatilityType2=="Cross-Bar Artifact" ? volatilityArtifact_CrossBar : select_VolatilityType2=="Comparative Total" ? volatilityTotal_Comparative : select_VolatilityType2=="Comparative Positive" ? volatilityPositive_Comparative : select_VolatilityType2=="Comparative Negative" ? volatilityNegative_Comparative : select_VolatilityType2=="Comparative Signal" ? volatilitySignal_Comparative : select_VolatilityType2=="Comparative Delta" ? volatilityDelta_Comparative : na

select_PlotType1 = input(title="Plot Type I", options = ["Volatility"], defval="Volatility", group="Plot Types")
select_PlotType2 = input(title="Plot Type II", options = ["Volatility"], defval="Volatility", group="Plot Types")

plot1 = select_PlotType1=="Volatility" ? volatilityType1 : na
var volatilityUp = 0.0
volatilityUp := na(volatilityUp[1]) ? 0 : volatilityType1 > 0 ? abs(volatilityUp + volatilityType1) : abs(volatilityUp[1])

var volatilityDown = 0.0
volatilityDown := na(volatilityDown[1]) ? 0 : volatilityType1 < 0 ? volatilityDown + volatilityType1 : volatilityDown[1]
volatilityDownAbs = abs(volatilityDown)

volatilityUp_Periodic = na(volatilityUp[lookback]) ? na : volatilityUp-volatilityUp[lookback]
volatilityDown_Periodic = na(volatilityDownAbs[lookback]) ? na : volatilityDownAbs-volatilityDownAbs[lookback]

plot2 = select_PlotType2=="Volatility" ? volatilityType2 : na
//

plot(switcher=="Cumulative" ? volatilityUp : volatilityUp_Periodic, "Up 1", color=color.lime)
plot(switcher=="Cumulative" ? volatilityDownAbs : volatilityDown_Periodic, "Down 1", color=color.maroon)
